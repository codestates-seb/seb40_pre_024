plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'

    id "org.asciidoctor.jvm.convert" version "3.3.2" //rest docs
}

group = 'com.pre-project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

configurations {
    asciidoctorExtensions
}

dependencies {
    //rest docs
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //유효성 관련
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //H2 로컬용
//    runtimeOnly 'com.h2database:h2'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    //Json Mapper
    implementation 'com.google.code.gson:gson:2.9.0'

    //JWT 관련
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'


    //My Sql 서버용
    implementation 'mysql:mysql-connector-java'



    //Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'



    //redis cache
    implementation 'org.springframework.boot:spring-boot-starter-cache:2.7.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.7.5'

    //aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    configurations "asciidoctorExtensions"
    inputs.dir snippetsDir
    dependsOn test
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    println "asciidoctor output: ${asciidoctor.outputDir}"
    from file("${asciidoctor.outputDir}")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn copyDocument
    from ("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}
